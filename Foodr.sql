-- Calculating REVENUE
SELECT
	ORDER_ID,
	SUM(MEAL_PRICE * ORDER_QUANTITY) AS REVENUE
FROM
	ORDERS
	JOIN MEALS USING (MEAL_ID)
GROUP BY
	ORDER_ID
ORDER BY
	ORDER_ID
	
	
-- Calculating Cost
SELECT
	MEAL_ID,
	SUM(MEAL_COST * STOCKED_QUANTITY) AS TOTAL_COST
FROM
	MEALS
	JOIN STOCK USING (MEAL_ID)
GROUP BY
	MEAL_ID
ORDER BY
	TOTAL_COST DESC

	
-- Using Common Table Expression
WITH
	COSTS_AND_QUANTITES AS (
		SELECT
			M.MEAL_ID,
			S.STOCKED_QUANTITY AS QUANTITY,
			SUM(M.MEAL_COST * S.STOCKED_QUANTITY) AS COST
		FROM
			MEALS AS M
			JOIN STOCK AS S USING (MEAL_ID)
		GROUP BY
			M.MEAL_ID,
			S.STOCKED_QUANTITY
	)
SELECT
	*
FROM
	COSTS_AND_QUANTITES
ORDER BY COST DESC
LIMIT 3;

-- Bringing Revenue and Cost Together- Calculating Profit
WITH
	REVENUES AS (
		SELECT
			M.MEAL_ID,
			SUM(M.MEAL_PRICE * O.ORDER_QUANTITY) AS REVENUE
		FROM
			ORDERS AS O
			JOIN MEALS AS M USING (MEAL_ID)
		GROUP BY
			M.MEAL_ID
	),
	COSTS AS (
		SELECT
			M.MEAL_ID,
			SUM(M.MEAL_COST * S.STOCKED_QUANTITY) AS COST
		FROM
			MEALS AS M
			JOIN STOCK AS S USING (MEAL_ID)
		GROUP BY
			M.MEAL_ID
	)
SELECT
	R.MEAL_ID,
	R.REVENUE,
	C.COST,
	(R.REVENUE - C.COST) AS PROFIT,
	((R.REVENUE - C.COST) / NULLIF(C.COST, 0)) * 100
	 AS PROFIT_PERCENTAGE
FROM
	REVENUES AS R
	JOIN COSTS AS C USING (MEAL_ID)
ORDER BY
	PROFIT DESC
LIMIT 3;

-- REGISTRATION SETUP
-- calculate first three user registration
SELECT
	USER_ID,
	MIN(ORDER_DATE)
FROM
	ORDERS
GROUP BY USER_ID
ORDER BY USER_ID
LIMIT 3;

-- User Registrations as per month
WITH
	REG_USERS AS (
		SELECT
			USER_ID,
			MIN(ORDER_DATE) AS REG_DATE
		FROM
			ORDERS
		GROUP BY
			USER_ID
	)
SELECT
	DATE_TRUNC('month', REG_DATE)::DATE AS FOODR_MONTH,
	COUNT(DISTINCT USER_ID) AS REGS
FROM
	REG_USERS
GROUP BY
	FOODR_MONTH
	ORDER BY
	FOODR_MONTH ASC


-- Active Users (Monthly)
SELECT
	DATE_TRUNC('month', ORDER_DATE)::DATE AS FOODR_MONTH,
	COUNT(DISTINCT USER_ID) AS MAU
FROM
	ORDERS
GROUP BY
	FOODR_MONTH
ORDER BY
	FOODR_MONTH




